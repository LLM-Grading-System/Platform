version: "3.9"
services:
  postgres:
    image: postgres:14.8-alpine3.18
    container_name: grading_postgres
    env_file: ".env"
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    volumes:
      - grading_postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  minio:
    image: minio/minio:RELEASE.2025-02-28T09-55-16Z
    container_name: grading_minio
    command: server --console-address ":9001" /data/
    ports:
      - "9001:9001" # Admin Panel
    env_file: ".env"
    environment:
      - MINIO_ROOT_USER=$MINIO_ROOT_USER
      - MINIO_ROOT_PASSWORD=$MINIO_ROOT_PASSWORD
    volumes:
      - grading_minio_data:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: grading_zookeeper
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: grading_kafka
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    hostname: kafka
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: grading_kafka_ui
    ports:
      - 8090:8080
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
      - AUTH_TYPE=LOGIN_FORM
      - SPRING_SECURITY_USER_NAME=$KAFKA_UI_ADMIN_LOGIN
      - SPRING_SECURITY_USER_PASSWORD=$KAFKA_UI_ADMIN_PASSWORD
    links:
      - kafka
      - zookeeper

  web:
    image: daniilsolo/llm-grading.frontend
    container_name: grading_web
    ports:
      - 80:80
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/site.conf:/etc/nginx/conf.d/site.conf
    depends_on:
      - api

  api:
    image: daniilsolo/llm-grading.core-api:latest
    container_name: grading_api
    ports:
      - 8000:8000
    env_file: ".env"
    restart: always
    environment:
      - MODE=prod
      - ADMIN_USER=$PLATFORM_ADMIN_USER
      - ADMIN_PASSWORD=$PLATFORM_ADMIN_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - MINIO_HOST=minio
      - MINIO_PORT=9000
      - MINIO_BUCKET=submissions
      - MINIO_ACCESS_KEY=$MINIO_ACCESS_KEY
      - MINIO_SECRET_KEY=$MINIO_SECRET_KEY
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    depends_on:
      - kafka
      - minio
      - postgres

  grader:
    image: daniilsolo/llm-grading.grader:latest
    container_name: grading_worker
    env_file: ".env"
    restart: always
    environment:
      - MODE=prod
      - MINIO_HOST=minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=$MINIO_ACCESS_KEY
      - MINIO_SECRET_KEY=$MINIO_SECRET_KEY
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - API_HOST=api
      - API_PORT=8000
      - MISTRAL_API_KEY=$MISTRAL_API_KEY
      - MISTRAL_MODEL=$MISTRAL_MODEL
    depends_on:
      - kafka
      - minio

  bot:
    image: daniilsolo/llm-grading.student-bot:latest
    container_name: grading_student_bot
    env_file: ".env"
    restart: always
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - API_HOST=api
      - API_SCHEMA=http
      - API_PORT=8000
      - BOT_TOKEN=$BOT_TOKEN
      - GITHUB_ACCESS_TOKEN=$GITHUB_ACCESS_TOKEN

  github-gateway:
    image: daniilsolo/llm-grading.github-gateway:latest
    container_name: grading_github_gateway
    env_file: ".env"
    restart: always
    ports:
      - 8001:8000
    volumes:
      - ./grading.private-key.pem:/app/grading.private-key.pem
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - GITHUB_APPS_PRIVATE_KEY_PATH=$GITHUB_APPS_PRIVATE_KEY_PATH
      - GITHUB_APPS_CLIENT_ID=$GITHUB_APPS_CLIENT_ID
      - GITHUB_PERSONAL_ACCESS_TOKEN=$GITHUB_PERSONAL_ACCESS_TOKEN

volumes:
  grading_postgres_data:
  grading_minio_data:
